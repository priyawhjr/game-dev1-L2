# Lesson 9 - Connecting Satellites
import pgzrun
from random import randint # to place satellite at random pos.
from time import time

WIDTH = 800
HEIGHT = 600

satellites = [] # variable (or empty list) for satellite
lines = []          #variable to connect satellite through lines 
next_satellite = 0   # to keep a  track of next satellite

start_time = 0
total_time = 0
end_time = 0

number_of_satellite = 10

def create_satellites():
    global start_time 
    for count in range(0, number_of_satellite):
        satellite = Actor("satellite")
        satellite.pos = randint(40, WIDTH-40), randint(40, HEIGHT-40)
        '''     # OR
        #satellite.pos = randint(50,500), randint(50,500)
               # OR
        #satellite.x = randint(50,500)
        #satellite.y = randint(50,500)
    '''
        satellites.append(satellite)
    start_time = time() # to get current time of ur computer.


def draw():
    global total_time

    screen.blit("background", (0,0))
    number = 1 #starting no. of satellite
    for satellite in satellites:
        #In'satellite.pos[1]+20',added 20 to place the 
        # text just below the satellite
        screen.draw.text(str(number), (satellite.pos[0], satellite.pos[1]+20))
        satellite.draw()
        number = number + 1
    
    for line in lines:
        screen.draw.line(line[0], line[1], (255,255,255))

    if next_satellite < number_of_satellite:
        total_time = time() - start_time #current time - start time
        # display tot_time (in str) upto round off 1digit 
        # after decimal.at the top left side of o/u window
        screen.draw.text(str(round(total_time,1)), (10,10), fontsize=30)
    else: #at the end of game, show tot time & round off 
        #upto 1 digit after decimal
        screen.draw.text(str(round(total_time,1)), (10,10), fontsize=30)


def update():#to run prog 60 times in a sec[see the time]
    pass # just do pass in it

def on_mouse_down(pos):
    global next_satellite, lines

    if next_satellite < number_of_satellite:
        if satellites[next_satellite].collidepoint(pos):
            if next_satellite:
                lines.append((satellites[next_satellite-1].pos, satellites[next_satellite].pos))
            next_satellite +=  1
        else: # if u click on incorrect satellite, 
            #all line drawn will be removed.
            lines = [] # to empty the list of lines
            next_satellite = 0
 
create_satellites()

pgzrun.go()








'''
https://www.udemy.com/course/python-game-development-with-
pygame-zero/learn/lecture/21228494#overview
● Username - abhishek.bahl@gmail.com, Password - Lkkw2(&amp;yA(#W5AA
'''
